/// THIS FILE IS GENERATED BY r_resources. DO NOT MODIFY MANUALLY.

// ignore_for_file: avoid_classes_with_only_static_members,always_specify_types,lines_longer_than_80_chars,non_constant_identifier_names,prefer_double_quotes,unnecessary_raw_strings,use_raw_strings

import 'package:flutter/material.dart';

class R {
  static const images = _ImageResources();
  static const svg = _SvgResources();
  static _Strings stringsOf(BuildContext context) => _Strings.of(context);
}

class _ImageResources {
  const _ImageResources();

  /// ![](D:\programming\flutter\N.Budget-Android\assets/images/logo.png)
  final logo = r'assets/images/logo.png';

  /// ![](D:\programming\flutter\N.Budget-Android\assets/images/logoApp.png)
  final logo_app = r'assets/images/logoApp.png';

  /// ![](D:\programming\flutter\N.Budget-Android\assets/images/logoWhite.png)
  final logo_white = r'assets/images/logoWhite.png';
}

class _SvgResources {
  const _SvgResources();
}

class _Strings {
  const _Strings(this.locale);

  static const _fallbackLocale = Locale('en', 'US');
  final Locale locale;

  static _Strings of(BuildContext context) {
    return Localizations.of<_Strings>(context, _Strings);
  }

  static const Map<String, Map<String, String>> _localizedValues = {
    'en_US': {
      'balanceMonthFirstBlock': 'Until the end of the month',
      'comment': 'Comment...',
      'conntectionState': 'No internet connection',
      'costsLabel': 'Add costs',
      'dailyBudget': 'Today you can spend',
      'datePickerActionButton': 'Today',
      'deleteHistory': 'Delete',
      'emptyTextFieldAuth': 'Login or password fields cannot be empty',
      'emptyUserAuth': 'Wrong email or password entered',
      'enterEmail': 'Enter email',
      'forgotPassword': 'Forgot password',
      'freeMoney': 'Free money',
      'getStarted': 'Get started',
      'historyContainer': 'History',
      'incomeI': 'Income',
      'incomeLabel': 'Add income',
      'incorrectEmailAuth': 'Incorrect email input',
      'incorrectPasswordAuth':
          'Incorrect password entry. The string must contain at least one number, one special character, a Latin letter in upper and lower case, the string consists of at least 6 characters',
      'labelBottomSignInAuth': 'Already registered? Log in!',
      'labelBottomSignUpAuth': 'Not registered? Sign up!',
      'labelsignInAuth': 'Sign in',
      'labelsignUpAuth': 'Sign up',
      'loginHintAuth': 'Login',
      'mandatoryExpenses': 'Mandatory expenses',
      'messageSentToEmail':
          'An email to reset your password was sent to your email address',
      'nameApp': 'N.Budget',
      'navBarHistory': 'History',
      'navBarHome': 'Home',
      'navBarInfo': 'Info',
      'passwordHintAuth': 'Password',
      'resetPassword': 'Reset password',
      'saveData': 'Save',
      'selectedFilterCosts': 'Selected: costs',
      'selectedFilterIncome': 'Selected: income',
      'selectedFilterAll': 'Selected: all history',
      'showAllHistory': 'All history',
      'showOnlyCosts': 'Costs',
      'showOnlyIncome': 'Income',
      'signInButtonAuth': 'Sign in',
      'signUpButtonAuth': 'Sign up',
      'successfulSignUpAuth': 'You have successfully registered',
      'symbolMoney': '\$',
      'title': 'Title...',
      'versionApp': 'Verison 1.1',
      'welcome': 'Welcome',
      'welcomeText':
          'Thank you for downloading our app. N. Budget is an app to keep a budget. Together with it, you can easily monitor your spending and know how much money is left until the end of the month.',
      'welcomeTextFoundError':
          'If you find a bug or have a suggestion on how to improve the app, please write to our email nbudget.help@gmail.com.',
      'writeToTheMail': 'Write to the email',
      'zeroMoney': '0.0',
    },
    'en_GB': {
      'balanceMonthFirstBlock': 'Until the end of the month',
      'comment': 'Comment...',
      'conntectionState': 'No internet connection',
      'costsLabel': 'Add costs',
      'dailyBudget': 'Today you can spend',
      'datePickerActionButton': 'Today',
      'deleteHistory': 'Delete',
      'emptyTextFieldAuth': 'Login or password fields cannot be empty',
      'emptyUserAuth': 'Wrong email or password entered',
      'enterEmail': 'Enter email',
      'forgotPassword': 'Forgot password',
      'freeMoney': 'Free money',
      'getStarted': 'Get started',
      'historyContainer': 'History',
      'incomeI': 'Income',
      'incomeLabel': 'Add income',
      'incorrectEmailAuth': 'Incorrect email input',
      'incorrectPasswordAuth':
          'Incorrect password entry. The string must contain at least one number, one special character, a Latin letter in upper and lower case, the string consists of at least 6 characters',
      'labelBottomSignInAuth': 'Already registered? Log in!',
      'labelBottomSignUpAuth': 'Not registered? Sign up!',
      'labelsignInAuth': 'Sign in',
      'labelsignUpAuth': 'Sign up',
      'loginHintAuth': 'Login',
      'mandatoryExpenses': 'Mandatory expenses',
      'messageSentToEmail':
          'An email to reset your password was sent to your email address',
      'nameApp': 'N.Budget',
      'navBarHistory': 'History',
      'navBarHome': 'Home',
      'navBarInfo': 'Info',
      'passwordHintAuth': 'Password',
      'resetPassword': 'Reset password',
      'saveData': 'Save',
      'selectedFilterCosts': 'Selected: costs',
      'selectedFilterIncome': 'Selected: income',
      'selectedFilterAll': 'Selected: all history',
      'showAllHistory': 'All history',
      'showOnlyCosts': 'Costs',
      'showOnlyIncome': 'Income',
      'signInButtonAuth': 'Sign in',
      'signUpButtonAuth': 'Sign up',
      'successfulSignUpAuth': 'You have successfully registered',
      'symbolMoney': '\$',
      'title': 'Title...',
      'versionApp': 'Verison 1.1',
      'welcome': 'Welcome',
      'welcomeText':
          'Thank you for downloading our app. N. Budget is an app to keep a budget. Together with it, you can easily monitor your spending and know how much money is left until the end of the month.',
      'welcomeTextFoundError':
          'If you find a bug or have a suggestion on how to improve the app, please write to our email nbudget.help@gmail.com.',
      'writeToTheMail': 'Write to the email',
      'zeroMoney': '0.0',
    },
    'ru': {
      'balanceMonthFirstBlock': 'До конца месяца осталось',
      'comment': 'Комментарий...',
      'conntectionState': 'Нет подключения к интернету',
      'costsLabel': 'Добавить расходы',
      'dailyBudget': 'Сегодня можно потратить',
      'datePickerActionButton': 'Сегодня',
      'deleteHistory': 'Удалить',
      'emptyTextFieldAuth': 'Поля логина или пароля не могут быть пустыми',
      'emptyUserAuth': 'Неправильно введён логин или пароль',
      'enterEmail': 'Введите почту',
      'forgotPassword': 'Забыл пароль',
      'freeMoney': 'Свободных денег',
      'getStarted': 'Начать',
      'historyContainer': 'История',
      'incomeI': 'Доход',
      'incomeLabel': 'Добавить доход',
      'incorrectEmailAuth': 'Некорректный ввод email',
      'incorrectPasswordAuth':
          'Некорректный ввод пароля. Строка должна содержать хотя бы одно число, один спецсимвол, латинскую букву в верхнем и нижнем регистре, строка состоит не менее, чем из 6 символов',
      'labelBottomSignInAuth': 'Уже зарегистрирован? Авторизируйся!',
      'labelBottomSignUpAuth': 'Не зарегистрирован? Зарегистрируйся!',
      'labelsignInAuth': 'Авторизация',
      'labelsignUpAuth': 'Регистрация',
      'loginHintAuth': 'Логин',
      'mandatoryExpenses': 'Обязательные расходы',
      'messageSentToEmail': 'Письмо для сброса пароля было отправлено на почту',
      'navBarHistory': 'История',
      'navBarHome': 'Домой',
      'navBarInfo': 'Информация',
      'passwordHintAuth': 'Пароль',
      'resetPassword': 'Сбросить пароль',
      'saveData': 'Сохранить',
      'selectedFilterCosts': 'Выбраны: расходы',
      'selectedFilterIncome': 'Выбран: доход',
      'selectedFilterAll': 'Выбрана: вся история',
      'showAllHistory': 'Вся история',
      'showOnlyCosts': 'Расходы',
      'showOnlyIncome': 'Доход',
      'signInButtonAuth': 'Войти',
      'signUpButtonAuth': 'Зарегистрироваться',
      'successfulSignUpAuth': 'Вы успешно зарегистрированы',
      'symbolMoney': '₽',
      'title': 'Название...',
      'versionApp': 'Версия 1.1',
      'welcome': 'Добро пожаловать',
      'welcomeText':
          'Спасибо, что скачали наше приложение. N.Budget - это приложение, чтобы вести бюджет. Вместе с ним Вы сможете запросто следить за своими расходами и будете знать сколько осталось средств до конца месяца.',
      'welcomeTextFoundError':
          'Если Вы обнаружили какую-то ошибку или у Вас есть предложение как улучшить приложение, то пишите на нашу почту nbudget.help@gmail.com.',
      'writeToTheMail': 'Написать на почту',
      'zeroMoney': '0.0',
    },
  };

  String _getString(String code) {
    return _localizedValues[locale.toString()][code] ??
        _localizedValues[_fallbackLocale.toString()][code] ??
        code;
  }

  /// 'Until the end of the month'
  String get balanceMonthFirstBlock => _getString('balanceMonthFirstBlock');

  /// 'Comment...'
  String get comment => _getString('comment');

  /// 'No internet connection'
  String get conntectionState => _getString('conntectionState');

  /// 'Add costs'
  String get costsLabel => _getString('costsLabel');

  /// 'Today you can spend'
  String get dailyBudget => _getString('dailyBudget');

  /// 'Today'
  String get datePickerActionButton => _getString('datePickerActionButton');

  /// 'Delete'
  String get deleteHistory => _getString('deleteHistory');

  /// 'Login or password fields cannot be empty'
  String get emptyTextFieldAuth => _getString('emptyTextFieldAuth');

  /// 'Wrong email or password entered'
  String get emptyUserAuth => _getString('emptyUserAuth');

  /// 'Enter email'
  String get enterEmail => _getString('enterEmail');

  /// 'Forgot password'
  String get forgotPassword => _getString('forgotPassword');

  /// 'Free money'
  String get freeMoney => _getString('freeMoney');

  /// 'Get started'
  String get getStarted => _getString('getStarted');

  /// 'History'
  String get historyContainer => _getString('historyContainer');

  /// 'Income'
  String get incomeI => _getString('incomeI');

  /// 'Add income'
  String get incomeLabel => _getString('incomeLabel');

  /// 'Incorrect email input'
  String get incorrectEmailAuth => _getString('incorrectEmailAuth');

  /// 'Incorrect password entry. The string must contain at least one number, one special character, a Latin letter in upper and lower case, the string consists of at least 6 characters'
  String get incorrectPasswordAuth => _getString('incorrectPasswordAuth');

  /// 'Already registered? Log in!'
  String get labelBottomSignInAuth => _getString('labelBottomSignInAuth');

  /// 'Not registered? Sign up!'
  String get labelBottomSignUpAuth => _getString('labelBottomSignUpAuth');

  /// 'Sign in'
  String get labelsignInAuth => _getString('labelsignInAuth');

  /// 'Sign up'
  String get labelsignUpAuth => _getString('labelsignUpAuth');

  /// 'Login'
  String get loginHintAuth => _getString('loginHintAuth');

  /// 'Mandatory expenses'
  String get mandatoryExpenses => _getString('mandatoryExpenses');

  /// 'An email to reset your password was sent to your email address'
  String get messageSentToEmail => _getString('messageSentToEmail');

  /// 'N.Budget'
  String get nameApp => _getString('nameApp');

  /// 'History'
  String get navBarHistory => _getString('navBarHistory');

  /// 'Home'
  String get navBarHome => _getString('navBarHome');

  /// 'Info'
  String get navBarInfo => _getString('navBarInfo');

  /// 'Password'
  String get passwordHintAuth => _getString('passwordHintAuth');

  /// 'Reset password'
  String get resetPassword => _getString('resetPassword');

  /// 'Save'
  String get saveData => _getString('saveData');

  /// 'Selected: costs'
  String get selectedFilterCosts => _getString('selectedFilterCosts');

  /// 'Selected: income'
  String get selectedFilterIncome => _getString('selectedFilterIncome');

  /// 'Selected: all history'
  String get selectedFilterAll => _getString('selectedFilterAll');

  /// 'All history'
  String get showAllHistory => _getString('showAllHistory');

  /// 'Costs'
  String get showOnlyCosts => _getString('showOnlyCosts');

  /// 'Income'
  String get showOnlyIncome => _getString('showOnlyIncome');

  /// 'Sign in'
  String get signInButtonAuth => _getString('signInButtonAuth');

  /// 'Sign up'
  String get signUpButtonAuth => _getString('signUpButtonAuth');

  /// 'You have successfully registered'
  String get successfulSignUpAuth => _getString('successfulSignUpAuth');

  /// '\$'
  String get symbolMoney => _getString('symbolMoney');

  /// 'Title...'
  String get title => _getString('title');

  /// 'Verison 1.1'
  String get versionApp => _getString('versionApp');

  /// 'Welcome'
  String get welcome => _getString('welcome');

  /// 'Thank you for downloading our app. N. Budget is an app to keep a budget. Together with it, you can easily monitor your spending and know how much money is left until the end of the month.'
  String get welcomeText => _getString('welcomeText');

  /// 'If you find a bug or have a suggestion on how to improve the app, please write to our email nbudget.help@gmail.com.'
  String get welcomeTextFoundError => _getString('welcomeTextFoundError');

  /// 'Write to the email'
  String get writeToTheMail => _getString('writeToTheMail');

  /// '0.0'
  String get zeroMoney => _getString('zeroMoney');
}

class RStringsDelegate extends LocalizationsDelegate<_Strings> {
  const RStringsDelegate();

  static const supportedLocales = [
    Locale('en', 'US'),
    Locale('en', 'GB'),
    Locale('ru'),
  ];

  static const fallbackLocale = Locale('en', 'US');

  @override
  bool isSupported(Locale locale) => supportedLocales.contains(locale);

  @override
  Future<_Strings> load(Locale locale) async {
    return _Strings(locale);
  }

  @override
  bool shouldReload(covariant LocalizationsDelegate<_Strings> old) => false;
}
